<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:cloud="http://schema.cloudfoundry.org/spring" 
		xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd   
		 http://schema.cloudfoundry.org/spring http://schema.cloudfoundry.org/spring/cloudfoundry-spring-0.8.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd" default-lazy-init="true">


	<!-- <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"> <property name="cacheManager"> <ref local="ehCache" /> </property> </bean> <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:configLocation="classpath:ehcache.xml" /> 引用ehCache的配置 <bean id="defaultCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"> <property name="configLocation"> <value>classpath:ehcache.xml</value> </property> </bean> 定义ehCache的工厂，并设置所使用的Cache name <bean id="ehCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean"> <property name="cacheManager"> <ref local="defaultCacheManager" /> </property> <property name="cacheName"> 
		<value>DEFAULT_CACHE</value> </property> </bean> find/create cache拦截器 <bean id="methodCacheInterceptor" class="com.gdie.interceptor.MethodCacheInterceptor"> <property name="cache"> <ref local="ehCache" /> </property> </bean> flush cache拦截器 <bean id="methodCacheAfterAdvice" class="com.gdie.interceptor.MethodCacheAfterAdvice"> <property name="cache"> <ref local="ehCache" /> </property> </bean> <bean id="methodCachePointCut" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor"> <property name="advice"> <ref local="methodCacheInterceptor" /> </property> <property name="patterns"> <list> <value>.*find*.*</value> <value>.*get*.*</value> <value>.*query*.*</value> </list> </property> </bean> <bean id="methodCachePointCutAdvice" 
		class="org.springframework.aop.support.RegexpMethodPointcutAdvisor"> <property name="advice"> <ref local="methodCacheAfterAdvice" /> </property> <property name="patterns"> <list> <value>.*create*.*</value> <value>.*update*.*</value> <value>.*delete*.*</value> <value>.*add*.*</value> <value>.*modify*.*</value> <value>.*remove*.*</value> </list> </property> </bean> -->




	<!-- 自动代理 -->
	<!-- <bean id="autoproxy" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator"> 可以是Service或DAO层（最好是针对业务层*Service） <property name="beanNames"> <list> <value>*Service</value> </list> </property> <property name="interceptorNames"> <list> <value>methodCachePointCut</value> <value>methodCachePointCutAdvice</value> <value>transactionInterceptor</value> </list> </property> </bean> -->


	<!-- 引用ehCache的配置 -->
	<bean id="defaultCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation">
			<value>classpath:ehcache.xml</value>
		</property>
	</bean>

	<!-- 定义ehCache的工厂，并设置所使用的Cache name -->
	<bean id="ehCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager">
			<ref local="defaultCacheManager" />
		</property>
		<property name="cacheName">
			<value>DEFAULT_CACHE</value>
		</property>
	</bean>

	<!-- find/create cache拦截器 -->
	<bean id="methodCacheInterceptor" class="com.gdie.interceptor.MethodCacheInterceptor">
		<property name="cache">
			<ref local="ehCache" />
		</property>
	</bean>
	<!-- flush cache拦截器 -->
	<bean id="methodCacheAfterAdvice" class="com.gdie.interceptor.MethodCacheAfterAdvice">
		<property name="cache">
			<ref local="ehCache" />
		</property>
	</bean>
	<bean id="methodCachePointCut" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="advice">
			<ref local="methodCacheInterceptor" />
		</property>
		<property name="patterns">
			<list>
				<value>.*find*.*</value>
				<value>.*get*.*</value>
				<value>.*query*.*</value>
				<value>.*count*.*</value>
				<value>.*select*.*</value>
				<value>.*statistics*.*</value>
				
			</list>
		</property>
	</bean>
	<bean id="methodCachePointCutAdvice" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="advice">
			<ref local="methodCacheAfterAdvice" />
		</property>
		<property name="patterns">
			<list>
				<value>.*create*.*</value>
				<value>.*update*.*</value>
				<value>.*delete*.*</value>
				<value>.*add*.*</value>
				<value>.*modify*.*</value>
				<value>.*remove*.*</value>
				<value>.*insert*.*</value>
				<value>.*update*.*</value>
				<value>.*balanced*.*</value>
			</list>
		</property>
	</bean>
	<!-- 自动代理 -->
	<bean id="autoproxy" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<!-- 可以是Service或DAO层（最好是针对业务层*Service） -->
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>methodCachePointCut</value>
				<value>methodCachePointCutAdvice</value>
			</list>
		</property>
	</bean>

</beans>
